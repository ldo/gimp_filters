#!/usr/bin/python3
#+
# Implementation of refinement on top of basic Make Seamless filter as
# described by Bowie J Poag here
# <http://www.mail-archive.com/gimp-developer@lists.xcf.berkeley.edu/msg06649.html>.
#
# Copyright 2010 by Lawrence D'Oliveiro <ldo@geek-central.gen.nz>. This
# script is licensed CC0
# <https://creativecommons.org/publicdomain/zero/1.0/>; do with it
# what you will.
#-

import libgimp2
from libgimp2 import \
    GIMP, \
    pdb, \
    pdb1, \
    pdbpi

def do_effect(the_image, the_drawable) :
    k = 0.15
    drawable_width = pdb1.gimp_drawable_width(the_drawable.id)
    drawable_height = pdb1.gimp_drawable_height(the_drawable.id)
    border_width = round(drawable_width * k)
    border_height = round(drawable_height * k)
    offsets = pdb.gimp_drawable_offsets(the_drawable.id)
    pdb.gimp_image_undo_group_start(the_image.id)
    pdb.gimp_selection_all(the_image.id)
    pdb.gimp_rect_select \
      (
        the_image.id, # image
        offsets[0], # x
        offsets[1], # y
        drawable_width, # width
        drawable_height, # height
        GIMP.CHANNEL_OP_REPLACE, # operation
        False, # feather, unimportant
        0 # feather_radius
      )
    pdb.gimp_rect_select \
      (
        the_image.id, # image
        offsets[0] + border_width, # x
        offsets[1] + border_height, # y
        drawable_width - 2 * border_width, # width
        drawable_height - 2 * border_height, # height
        GIMP.CHANNEL_OP_SUBTRACT, # operation
        True, # feather
        round((border_width + border_height) / 2) # feather_radius
      )
    pdbpi.plug_in_make_seamless(the_image.id, the_drawable.id)
    pdb.gimp_selection_none(the_image.id)
    pdb.gimp_image_undo_group_end(the_image.id)
#end do_effect

libgimp2.plugin_install \
  (
    name = "python_fu_conservative_make_seamless",
    blurb = "Conservative version of Make Seamless",
    help = "Works on the whole image (ignores selection).",
    author = "Lawrence D'Oliveiro",
    copyright = "©2010 by Lawrence D’Oliveiro",
    date = "2022 June 2",
    image_types = "RGB*, GRAY*", # same as Make Seamless
    placement = libgimp2.UI_PLACEMENT.IMAGE,
    params = [],
    return_vals = None,
    action = do_effect,
    menu_name = "/Filters/Map",
    item_label = "Conservative Make Seamless",
  )

libgimp2.main()
